{"ast":null,"code":"var _jsxFileName = \"/Users/gforde/PlayerData/player-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PlayerModal from './components/PlayerModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n\n  // const [playerActions, setPlayerActions] = useState<{ [key: string]: PlayerActionCounts }>({\n\n  //   'Player 1': { goal: 0, assist: 0, foul: 0 },\n\n  //   'Player 2': { goal: 0, assist: 0, foul: 0 },\n\n  //   'Player 3': { goal: 0, assist: 0, foul: 0 },\n\n  //   'Player 4': { goal: 0, assist: 0, foul: 0 },\n\n  //   'Player 5': { goal: 0, assist: 0, foul: 0 },\n\n  //   'Player 6': { goal: 0, assist: 0, foul: 0 },\n\n  //   'Player 7': { goal: 0, assist: 0, foul: 0 },\n\n  // });\n\n  const [players, setPlayers] = useState({\n    Player1: {\n      actions: [],\n      actionCounts: {\n        goal: 0,\n        assist: 0,\n        foul: 0\n      }\n    },\n    Player2: {\n      actions: [],\n      actionCounts: {\n        goal: 0,\n        assist: 0,\n        foul: 0\n      }\n    }\n  });\n  const openModal = player => {\n    setSelectedPlayer(player);\n  };\n  const closeModal = () => {\n    setSelectedPlayer(null);\n  };\n\n  // Handle recording an action from the modal\n  const handleRecordAction = (player, actionType) => {\n    const actionTime = formatTime(elapsedTime);\n    setPlayers(prevPlayers => ({\n      ...prevPlayers,\n      [player]: {\n        ...prevPlayers[player],\n        actions: [...prevPlayers[player].actions, {\n          type: actionType,\n          time: actionTime\n        }],\n        actionCounts: {\n          ...prevPlayers[player].actionCounts,\n          [actionType]: prevPlayers[player].actionCounts[actionType] + 1\n        }\n      }\n    }));\n    setSelectedPlayer(null); // Close the modal after recording\n  };\n\n  // const recordAction = (actionType: keyof PlayerActions) => {\n\n  //   if (selectedPlayer) {\n\n  //     setPlayerActions((prevActions) => ({\n\n  //       ...prevActions,\n\n  //       [selectedPlayer]: {\n\n  //         ...prevActions[selectedPlayer],\n\n  //         [actionType]: prevActions[selectedPlayer][actionType] + 1,\n\n  //       },\n\n  //     }));\n\n  //   }\n\n  // };\n\n  // Timer states\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0); // Time in seconds\n\n  // Start/Stop the timer\n  useEffect(() => {\n    if (isRunning) {\n      const timer = setInterval(() => {\n        setElapsedTime(prevTime => prevTime + 1);\n      }, 1000); // Increment every second\n\n      // Clear the interval when isRunning changes or on component unmount\n      return () => clearInterval(timer);\n    }\n  }, [isRunning]);\n\n  // Format elapsed time as MM:SS\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${String(mins).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\n  };\n\n  // Toggle timer on Start/Stop button click\n  const handleStartStop = () => {\n    setIsRunning(!isRunning);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Soccer Match Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '2rem',\n        marginBottom: '20px'\n      },\n      children: [\"Match Time: \", formatTime(elapsedTime)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartStop,\n      style: {\n        padding: '10px 20px',\n        fontSize: '1rem'\n      },\n      children: isRunning ? 'Stop' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: Object.keys(players).map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          onClick: () => setSelectedPlayer(player),\n          style: {\n            cursor: 'pointer'\n          },\n          children: player\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Goals: \", players[player].actionCounts.goal]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Assists: \", players[player].actionCounts.assist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fouls: \", players[player].actionCounts.foul]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, player, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), selectedPlayer && /*#__PURE__*/_jsxDEV(PlayerModal, {\n      player: selectedPlayer,\n      onClose: () => setSelectedPlayer(null),\n      onRecordAction: handleRecordAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"by/DmgRFVHNN0Nw9WG6Dv7j4E0Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PlayerModal","jsxDEV","_jsxDEV","App","_s","selectedPlayer","setSelectedPlayer","players","setPlayers","Player1","actions","actionCounts","goal","assist","foul","Player2","openModal","player","closeModal","handleRecordAction","actionType","actionTime","formatTime","elapsedTime","prevPlayers","type","time","isRunning","setIsRunning","setElapsedTime","timer","setInterval","prevTime","clearInterval","seconds","mins","Math","floor","secs","String","padStart","handleStartStop","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","marginBottom","onClick","padding","marginTop","Object","keys","map","cursor","onClose","onRecordAction","_c","$RefreshReg$"],"sources":["/Users/gforde/PlayerData/player-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Field from './components/Field';\n\nimport PlayerModal from './components/PlayerModal';\n\n\n\nexport interface PlayerActionCounts {\n\n  goal: number;\n\n  assist: number;\n\n  foul: number;\n\n}\n\ninterface PlayerData {\n  [playerName: string]: {\n    actions: { type: keyof PlayerActionCounts; time: string }[];\n    actionCounts: PlayerActionCounts;\n  };\n}\n\n\nconst App: React.FC = () => {\n\n  const [selectedPlayer, setSelectedPlayer] = useState<string | null>(null);\n\n  // const [playerActions, setPlayerActions] = useState<{ [key: string]: PlayerActionCounts }>({\n\n  //   'Player 1': { goal: 0, assist: 0, foul: 0 },\n\n  //   'Player 2': { goal: 0, assist: 0, foul: 0 },\n\n  //   'Player 3': { goal: 0, assist: 0, foul: 0 },\n\n  //   'Player 4': { goal: 0, assist: 0, foul: 0 },\n\n  //   'Player 5': { goal: 0, assist: 0, foul: 0 },\n\n  //   'Player 6': { goal: 0, assist: 0, foul: 0 },\n\n  //   'Player 7': { goal: 0, assist: 0, foul: 0 },\n\n  // });\n\n  const [players, setPlayers] = useState<PlayerData>({\n    Player1: { actions: [], actionCounts: { goal: 0, assist: 0, foul: 0 } },\n    Player2: { actions: [], actionCounts: { goal: 0, assist: 0, foul: 0 } },\n  });\n\n  const openModal = (player: string) => {\n\n    setSelectedPlayer(player);\n\n  };\n\n\n\n  const closeModal = () => {\n\n    setSelectedPlayer(null);\n\n  };\n\n\n  // Handle recording an action from the modal\n  const handleRecordAction = (player: string, actionType: keyof PlayerActionCounts) => {\n    const actionTime = formatTime(elapsedTime);\n\n    setPlayers((prevPlayers) => ({\n      ...prevPlayers,\n      [player]: {\n        ...prevPlayers[player],\n        actions: [...prevPlayers[player].actions, { type: actionType, time: actionTime }],\n        actionCounts: {\n          ...prevPlayers[player].actionCounts,\n          [actionType]: prevPlayers[player].actionCounts[actionType] + 1,\n        },\n      },\n    }));\n    setSelectedPlayer(null); // Close the modal after recording\n  };\n\n  // const recordAction = (actionType: keyof PlayerActions) => {\n\n  //   if (selectedPlayer) {\n\n  //     setPlayerActions((prevActions) => ({\n\n  //       ...prevActions,\n\n  //       [selectedPlayer]: {\n\n  //         ...prevActions[selectedPlayer],\n\n  //         [actionType]: prevActions[selectedPlayer][actionType] + 1,\n\n  //       },\n\n  //     }));\n\n  //   }\n\n  // };\n\n// Timer states\nconst [isRunning, setIsRunning] = useState(false);\nconst [elapsedTime, setElapsedTime] = useState(0); // Time in seconds\n\n// Start/Stop the timer\nuseEffect(() => {\n    if (isRunning) {\n      const timer = setInterval(() => {\n        setElapsedTime((prevTime) => prevTime + 1);\n      }, 1000); // Increment every second\n\n      // Clear the interval when isRunning changes or on component unmount\n      return () => clearInterval(timer);\n    }\n  }, [isRunning]);\n\n// Format elapsed time as MM:SS\nconst formatTime = (seconds: number) => {\n  const mins = Math.floor(seconds / 60);\n  const secs = seconds % 60;\n  return `${String(mins).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\n};\n\n// Toggle timer on Start/Stop button click\nconst handleStartStop = () => {\n  setIsRunning(!isRunning);\n};\n\n  return (\n\n    <div>\n\n      <h1>Soccer Match Tracker</h1>\n\n      {/* Match Clock */}\n      <div style={{ fontSize: '2rem', marginBottom: '20px' }}>\n        Match Time: {formatTime(elapsedTime)}\n      </div>\n      <button onClick={handleStartStop} style={{ padding: '10px 20px', fontSize: '1rem' }}>\n        {isRunning ? 'Stop' : 'Start'}\n      </button>\n\n      {/* <Field onPlayerClick={openModal} playerActions={playerActions} /> */}\n\n      {/* <PlayerModal\n\n        player={selectedPlayer}\n\n        onClose={closeModal}\n\n        onRecordAction={handleRecordAction}\n\n      /> */}\n\n      {/* Display players and action counts */}\n      <div style={{ marginTop: '20px' }}>\n        {Object.keys(players).map((player) => (\n          <div key={player} style={{ marginBottom: '10px' }}>\n            <h3 onClick={() => setSelectedPlayer(player)} style={{ cursor: 'pointer' }}>{player}</h3>\n            <p>Goals: {players[player].actionCounts.goal}</p>\n            <p>Assists: {players[player].actionCounts.assist}</p>\n            <p>Fouls: {players[player].actionCounts.foul}</p>\n          </div>\n        ))}\n      </div>\n\n      {/* Player Modal */}\n      {selectedPlayer && (\n        <PlayerModal\n          player={selectedPlayer}\n          onClose={() => setSelectedPlayer(null)}\n          onRecordAction={handleRecordAction}\n        />\n      )}\n\n    </div>\n\n  );\n\n};\n\n\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
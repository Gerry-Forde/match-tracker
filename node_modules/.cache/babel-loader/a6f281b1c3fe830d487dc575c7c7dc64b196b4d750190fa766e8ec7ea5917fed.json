{"ast":null,"code":"var _jsxFileName = \"/Users/gforde/PlayerData/player-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Field from './components/Field';\nimport PlayerModal from './components/PlayerModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n  const [playerActions, setPlayerActions] = useState({\n    'Player 1': {\n      goal: 0,\n      assist: 0,\n      foul: 0\n    },\n    'Player 2': {\n      goal: 0,\n      assist: 0,\n      foul: 0\n    },\n    'Player 3': {\n      goal: 0,\n      assist: 0,\n      foul: 0\n    },\n    'Player 4': {\n      goal: 0,\n      assist: 0,\n      foul: 0\n    },\n    'Player 5': {\n      goal: 0,\n      assist: 0,\n      foul: 0\n    },\n    'Player 6': {\n      goal: 0,\n      assist: 0,\n      foul: 0\n    },\n    'Player 7': {\n      goal: 0,\n      assist: 0,\n      foul: 0\n    }\n  });\n  const openModal = player => {\n    setSelectedPlayer(player);\n  };\n  const closeModal = () => {\n    setSelectedPlayer(null);\n  };\n\n  // Handle recording an action from the modal\n  const handleRecordAction = (player, actionType) => {\n    const actionTime = formatTime(elapsedTime);\n    setPlayers(prevPlayers => ({\n      ...prevPlayers,\n      [player]: {\n        ...prevPlayers[player],\n        actions: [...prevPlayers[player].actions, {\n          type: actionType,\n          time: actionTime\n        }],\n        actionCounts: {\n          ...prevPlayers[player].actionCounts,\n          [actionType]: prevPlayers[player].actionCounts[actionType] + 1\n        }\n      }\n    }));\n    setSelectedPlayer(null); // Close the modal after recording\n  };\n\n  // const recordAction = (actionType: keyof PlayerActions) => {\n\n  //   if (selectedPlayer) {\n\n  //     setPlayerActions((prevActions) => ({\n\n  //       ...prevActions,\n\n  //       [selectedPlayer]: {\n\n  //         ...prevActions[selectedPlayer],\n\n  //         [actionType]: prevActions[selectedPlayer][actionType] + 1,\n\n  //       },\n\n  //     }));\n\n  //   }\n\n  // };\n\n  // Timer states\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0); // Time in seconds\n\n  // Start/Stop the timer\n  useEffect(() => {\n    if (isRunning) {\n      const timer = setInterval(() => {\n        setElapsedTime(prevTime => prevTime + 1);\n      }, 1000); // Increment every second\n\n      // Clear the interval when isRunning changes or on component unmount\n      return () => clearInterval(timer);\n    }\n  }, [isRunning]);\n\n  // Format elapsed time as MM:SS\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${String(mins).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\n  };\n\n  // Toggle timer on Start/Stop button click\n  const handleStartStop = () => {\n    setIsRunning(!isRunning);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Soccer Match Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '2rem',\n        marginBottom: '20px'\n      },\n      children: [\"Match Time: \", formatTime(elapsedTime)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartStop,\n      style: {\n        padding: '10px 20px',\n        fontSize: '1rem'\n      },\n      children: isRunning ? 'Stop' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      onPlayerClick: openModal,\n      playerActions: playerActions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerModal, {\n      player: selectedPlayer,\n      onClose: closeModal,\n      onRecordAction: recordAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"kO3+/4yuamgpXYzDze9CKoETRKI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Field","PlayerModal","jsxDEV","_jsxDEV","App","_s","selectedPlayer","setSelectedPlayer","playerActions","setPlayerActions","goal","assist","foul","openModal","player","closeModal","handleRecordAction","actionType","actionTime","formatTime","elapsedTime","setPlayers","prevPlayers","actions","type","time","actionCounts","isRunning","setIsRunning","setElapsedTime","timer","setInterval","prevTime","clearInterval","seconds","mins","Math","floor","secs","String","padStart","handleStartStop","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","marginBottom","onClick","padding","onPlayerClick","onClose","onRecordAction","recordAction","_c","$RefreshReg$"],"sources":["/Users/gforde/PlayerData/player-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Field from './components/Field';\n\nimport PlayerModal from './components/PlayerModal';\n\n\n\nexport interface PlayerActionCounts {\n\n  goal: number;\n\n  assist: number;\n\n  foul: number;\n\n}\n\n\n\nconst App: React.FC = () => {\n\n  const [selectedPlayer, setSelectedPlayer] = useState<string | null>(null);\n\n  const [playerActions, setPlayerActions] = useState<{ [key: string]: PlayerActionCounts }>({\n\n    'Player 1': { goal: 0, assist: 0, foul: 0 },\n\n    'Player 2': { goal: 0, assist: 0, foul: 0 },\n\n    'Player 3': { goal: 0, assist: 0, foul: 0 },\n\n    'Player 4': { goal: 0, assist: 0, foul: 0 },\n\n    'Player 5': { goal: 0, assist: 0, foul: 0 },\n\n    'Player 6': { goal: 0, assist: 0, foul: 0 },\n\n    'Player 7': { goal: 0, assist: 0, foul: 0 },\n\n  });\n\n\n\n  const openModal = (player: string) => {\n\n    setSelectedPlayer(player);\n\n  };\n\n\n\n  const closeModal = () => {\n\n    setSelectedPlayer(null);\n\n  };\n\n\n  // Handle recording an action from the modal\n  const handleRecordAction = (player: string, actionType: keyof PlayerActionCounts) => {\n    const actionTime = formatTime(elapsedTime);\n\n    setPlayers((prevPlayers) => ({\n      ...prevPlayers,\n      [player]: {\n        ...prevPlayers[player],\n        actions: [...prevPlayers[player].actions, { type: actionType, time: actionTime }],\n        actionCounts: {\n          ...prevPlayers[player].actionCounts,\n          [actionType]: prevPlayers[player].actionCounts[actionType] + 1,\n        },\n      },\n    }));\n    setSelectedPlayer(null); // Close the modal after recording\n  };\n\n  // const recordAction = (actionType: keyof PlayerActions) => {\n\n  //   if (selectedPlayer) {\n\n  //     setPlayerActions((prevActions) => ({\n\n  //       ...prevActions,\n\n  //       [selectedPlayer]: {\n\n  //         ...prevActions[selectedPlayer],\n\n  //         [actionType]: prevActions[selectedPlayer][actionType] + 1,\n\n  //       },\n\n  //     }));\n\n  //   }\n\n  // };\n\n// Timer states\nconst [isRunning, setIsRunning] = useState(false);\nconst [elapsedTime, setElapsedTime] = useState(0); // Time in seconds\n\n// Start/Stop the timer\nuseEffect(() => {\n    if (isRunning) {\n      const timer = setInterval(() => {\n        setElapsedTime((prevTime) => prevTime + 1);\n      }, 1000); // Increment every second\n\n      // Clear the interval when isRunning changes or on component unmount\n      return () => clearInterval(timer);\n    }\n  }, [isRunning]);\n\n// Format elapsed time as MM:SS\nconst formatTime = (seconds: number) => {\n  const mins = Math.floor(seconds / 60);\n  const secs = seconds % 60;\n  return `${String(mins).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\n};\n\n// Toggle timer on Start/Stop button click\nconst handleStartStop = () => {\n  setIsRunning(!isRunning);\n};\n\n  return (\n\n    <div>\n\n      <h1>Soccer Match Tracker</h1>\n\n      {/* Match Clock */}\n      <div style={{ fontSize: '2rem', marginBottom: '20px' }}>\n        Match Time: {formatTime(elapsedTime)}\n      </div>\n      <button onClick={handleStartStop} style={{ padding: '10px 20px', fontSize: '1rem' }}>\n        {isRunning ? 'Stop' : 'Start'}\n      </button>\n\n      <Field onPlayerClick={openModal} playerActions={playerActions} />\n\n      <PlayerModal\n\n        player={selectedPlayer}\n\n        onClose={closeModal}\n\n        onRecordAction={recordAction}\n\n      />\n\n    </div>\n\n  );\n\n};\n\n\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
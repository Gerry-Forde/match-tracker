{"ast":null,"code":"var _jsxFileName = \"/Users/gforde/PlayerData/player-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Import the CSS file\n// import Field from './components/Field';\nimport PlayerModal from './components/PlayerModal';\n// import ActionSummary from './components/ActionSummary'; // Import the new component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst playerNames = ['Player 1', 'Player 2', 'Player 3', 'Player 4', 'Player 5', 'Player 6', 'Player 7'];\nconst App = () => {\n  _s();\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n  const [showSummary, setShowSummary] = useState(false);\n  const [players, setPlayers] = useState(playerNames.reduce((acc, player) => {\n    acc[player] = {\n      actions: [],\n      actionCounts: {\n        goal: 0,\n        assist: 0,\n        foul: 0\n      }\n    };\n    return acc;\n  }, {}));\n  const getAllActions = () => {\n    const allActions = [];\n    Object.keys(players).forEach(player => {\n      allActions.push(...players[player].actions);\n    });\n    return allActions;\n  };\n  const allActions = getAllActions();\n  const sortedActions = allActions.sort((a, b) => {\n    const timeA = a.time.split(':').reduce((acc, time) => 60 * acc + parseInt(time, 10), 0);\n    const timeB = b.time.split(':').reduce((acc, time) => 60 * acc + parseInt(time, 10), 0);\n    return timeA - timeB;\n  });\n\n  // const allActions: { player: string; type: string; time: string }[] = []; // Store all actions for summary\n\n  const openModal = player => setSelectedPlayer(player);\n  const closeModal = () => setSelectedPlayer(null);\n  const handleRecordAction = (player, actionType) => {\n    const actionTime = formatTime(elapsedTime);\n    setPlayers(prevPlayers => ({\n      ...prevPlayers,\n      [player]: {\n        ...prevPlayers[player],\n        actions: [...prevPlayers[player].actions, {\n          type: actionType,\n          time: actionTime\n        }],\n        actionCounts: {\n          ...prevPlayers[player].actionCounts,\n          [actionType]: prevPlayers[player].actionCounts[actionType] + 1\n        }\n      }\n    }));\n    // allActions.push({ player, type: actionType, time: actionTime }); // Store action for summary\n    setSelectedPlayer(null); // Close the modal after recording\n  };\n  const showActionSummary = () => setShowSummary(true); // Show the action summary\n  const closeActionSummary = () => setShowSummary(false); // Close the summary\n\n  // Timer states\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0); // Time in seconds\n\n  // Start/Stop the timer\n  useEffect(() => {\n    if (isRunning) {\n      const timer = setInterval(() => {\n        setElapsedTime(prevTime => prevTime + 1);\n      }, 1000); // Increment every second\n\n      // Clear the interval when isRunning changes or on component unmount\n      return () => clearInterval(timer);\n    }\n  }, [isRunning]);\n\n  // Format elapsed time as MM:SS\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${String(mins).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\n  };\n\n  // Toggle timer on Start/Stop button click\n  const handleStartStop = () => {\n    setIsRunning(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !showSummary ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"Gaelic Match Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-clock\",\n        children: [\"Match Time: \", formatTime(elapsedTime)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-stop-button\",\n        onClick: handleStartStop,\n        children: isRunning ? 'Stop' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-container\",\n        children: Object.keys(players).map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"player-name\",\n            onClick: () => openModal(player),\n            children: player\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"G: \", players[player].actionCounts.goal, \" | A: \", players[player].actionCounts.assist, \" | F: \", players[player].actionCounts.foul]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)]\n        }, player, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), selectedPlayer && /*#__PURE__*/_jsxDEV(PlayerModal, {\n        player: selectedPlayer,\n        onClose: closeModal,\n        onRecordAction: actionType => handleRecordAction(selectedPlayer, actionType)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowSummary(true),\n        className: \"show-summary-button\",\n        children: \"Show Action Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Action Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sortedActions.length > 0 ? sortedActions.map((action, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [action.time, \" - \", action.type]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No actions recorded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowSummary(false),\n        className: \"back-button\",\n        children: \"Back to Main Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"EtG7uXxe/MDhT8r1k29Fl1tkoR0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PlayerModal","jsxDEV","_jsxDEV","playerNames","App","_s","selectedPlayer","setSelectedPlayer","showSummary","setShowSummary","players","setPlayers","reduce","acc","player","actions","actionCounts","goal","assist","foul","getAllActions","allActions","Object","keys","forEach","push","sortedActions","sort","a","b","timeA","time","split","parseInt","timeB","openModal","closeModal","handleRecordAction","actionType","actionTime","formatTime","elapsedTime","prevPlayers","type","showActionSummary","closeActionSummary","isRunning","setIsRunning","setElapsedTime","timer","setInterval","prevTime","clearInterval","seconds","mins","Math","floor","secs","String","padStart","handleStartStop","prev","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","onClose","onRecordAction","length","action","index","_c","$RefreshReg$"],"sources":["/Users/gforde/PlayerData/player-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css'; // Import the CSS file\n// import Field from './components/Field';\nimport PlayerModal from './components/PlayerModal';\n// import ActionSummary from './components/ActionSummary'; // Import the new component\n\nexport interface PlayerActionCounts {\n  goal: number;\n  assist: number;\n  foul: number;\n}\n\ninterface PlayerData {\n  [playerName: string]: {\n    actions: { type: keyof PlayerActionCounts; time: string }[];\n    actionCounts: PlayerActionCounts;\n  };\n}\n\nconst playerNames = ['Player 1', 'Player 2', 'Player 3', 'Player 4', 'Player 5', 'Player 6', 'Player 7'];\n\nconst App: React.FC = () => {\n  const [selectedPlayer, setSelectedPlayer] = useState<string | null>(null);\n  const [showSummary, setShowSummary] = useState(false);\n  \n  const [players, setPlayers] = useState<PlayerData>(\n    playerNames.reduce((acc, player) => {\n      acc[player] = { actions: [], actionCounts: { goal: 0, assist: 0, foul: 0 } };\n      return acc;\n    }, {} as PlayerData)\n  );\n\n  const getAllActions = () => {\n    const allActions: { type: keyof PlayerActionCounts; time: string }[] = [];\n    Object.keys(players).forEach((player) => {\n        allActions.push(...players[player].actions);\n    });\n    return allActions;\n  };\n\n  const allActions = getAllActions();\n\n  const sortedActions = allActions.sort((a, b) => {\n    const timeA = a.time.split(':').reduce((acc, time) => (60 * acc) + parseInt(time, 10), 0);\n    const timeB = b.time.split(':').reduce((acc, time) => (60 * acc) + parseInt(time, 10), 0);\n    return timeA - timeB;\n  });\n\n  // const allActions: { player: string; type: string; time: string }[] = []; // Store all actions for summary\n\n  const openModal = (player: string) => setSelectedPlayer(player);\n  const closeModal = () => setSelectedPlayer(null);\n\n  const handleRecordAction = (player: string, actionType: keyof PlayerActionCounts) => {\n    const actionTime = formatTime(elapsedTime);\n    setPlayers((prevPlayers) => ({\n      ...prevPlayers,\n      [player]: {\n        ...prevPlayers[player],\n        actions: [...prevPlayers[player].actions, { type: actionType, time: actionTime }],\n        actionCounts: {\n          ...prevPlayers[player].actionCounts,\n          [actionType]: prevPlayers[player].actionCounts[actionType] + 1,\n        },\n      },\n    }));\n    // allActions.push({ player, type: actionType, time: actionTime }); // Store action for summary\n    setSelectedPlayer(null); // Close the modal after recording\n  };\n\n  const showActionSummary = () => setShowSummary(true); // Show the action summary\n  const closeActionSummary = () => setShowSummary(false); // Close the summary\n\n  // Timer states\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0); // Time in seconds\n\n  // Start/Stop the timer\n  useEffect(() => {\n    if (isRunning) {\n      const timer = setInterval(() => {\n        setElapsedTime((prevTime) => prevTime + 1);\n      }, 1000); // Increment every second\n\n      // Clear the interval when isRunning changes or on component unmount\n      return () => clearInterval(timer);\n    }\n  }, [isRunning]);\n\n  // Format elapsed time as MM:SS\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${String(mins).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\n  };\n\n  // Toggle timer on Start/Stop button click\n  const handleStartStop = () => {\n    setIsRunning((prev) => !prev);\n  };\n\n  return (\n    <div>\n      {!showSummary ? (\n        <div className=\"app-container\">\n          <h1 className=\"app-title\">Gaelic Match Tracker</h1>\n          <div className=\"match-clock\">\n            Match Time: {formatTime(elapsedTime)}\n          </div>\n          <button className=\"start-stop-button\" onClick={handleStartStop}>\n            {isRunning ? 'Stop' : 'Start'}\n          </button>\n          \n          <div className=\"player-container\">\n            {Object.keys(players).map((player) => (\n              <div key={player} className=\"player-card\">\n                <button className=\"player-name\" onClick={() => openModal(player)}>\n                  {player}\n                </button>\n                <p>G: {players[player].actionCounts.goal} | A: {players[player].actionCounts.assist} | F: {players[player].actionCounts.foul}</p>\n              </div>\n            ))}\n          </div>\n\n          {selectedPlayer && (\n            <PlayerModal\n              player={selectedPlayer}\n              onClose={closeModal}\n              onRecordAction={(actionType) => handleRecordAction(selectedPlayer, actionType)}\n            />\n          )}\n\n          {/* Button to show action summary */}\n          <button onClick={() => setShowSummary(true)} className=\"show-summary-button\">\n            Show Action Summary\n          </button>\n        </div>\n      ) : (\n        <div>\n          <h2>Action Summary</h2>\n          <ul>\n            {sortedActions.length > 0 ? (\n              sortedActions.map((action, index) => (\n                <li key={index}>\n                  {action.time} - {action.type}\n                </li>\n              ))\n            ) : (\n              <li>No actions recorded</li>\n            )}\n          </ul>\n          <button onClick={() => setShowSummary(false)} className=\"back-button\">\n            Back to Main Screen\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}